<!-- 身份证 -->
	function testid(id) {
     // 1 "验证通过!", 0 //校验不通过
        var format = /^(([1][1-5])|([2][1-3])|([3][1-7])|([4][1-6])|([5][0-4])|([6][1-5])|([7][1])|([8][1-2]))\d{4}(([1][9]\d{2})|([2]\d{3}))(([0][1-9])|([1][0-2]))(([0][1-9])|([1-2][0-9])|([3][0-1]))\d{3}[0-9xX]$/;
        //号码规则校验
        if(!format.test(id)){
            return {'status':0,'msg':'身份证号码不合规'};
        }
        //区位码校验
        //出生年月日校验   前正则限制起始年份为1900;
        var year = id.substr(6,4),//身份证年
            month = id.substr(10,2),//身份证月
            date = id.substr(12,2),//身份证日
            time = Date.parse(month+'-'+date+'-'+year),//身份证日期时间戳date
            now_time = Date.parse(new Date()),//当前时间戳
            dates = (new Date(year,month,0)).getDate();//身份证当月天数
        if(time>now_time||date>dates){
            return {'status':0,'msg':'出生日期不合规'}
        }
        //校验码判断
        var c = new Array(7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2);   //系数
        var b = new Array('1','0','X','9','8','7','6','5','4','3','2');  //校验码对照表
        var id_array = id.split("");
        var sum = 0;
        for(var k=0;k<17;k++){
            sum+=parseInt(id_array[k])*parseInt(c[k]);
        }
        if(id_array[17].toUpperCase() != b[sum%11].toUpperCase()){
            return {'status':0,'msg':'身份证校验码不合规'}
        }
        return {'status':1,'msg':'校验通过'}
}

//格式化日期
  getTomorrowDateStr(datetime?: any) {
    let dd;
    if (datetime) {
      dd = new Date(datetime);
    } else {
      dd = new Date();
    }
    dd.setDate(dd.getDate());
    let y = dd.getFullYear();
    let m = dd.getMonth() + 1;
    let d = dd.getDate();
    let h = dd.getHours();
    let minutes = dd.getMinutes();
    let s = dd.getSeconds();
    h = h > 9 ? h : parseInt('0' + h);
    minutes = minutes > 9 ? minutes : parseInt('0' + minutes)
    s = s > 9 ? s : parseInt('0' + s);
    m = m > 9 ? m : parseInt('0' + m);
    d = d > 9 ? d : parseInt('0' + d);
    return y + "-" + m + "-" + d + ' ' + h + ':' + minutes + ':' + s;
  }

  // 输入框处理非数字
    clearNoNum(value) {
        if (value != '' && value.substr(0, 1) == '.') {
            value = "";
        }
        value = value.replace(/^0*(0\.|[1-9])/, '$1');//解决 粘贴不生效
        value = value.replace(/[^\d.]/g, "");  //清除“数字”和“.”以外的字符
        value = value.replace(/\.{2,}/g, "."); //只保留第一个. 清除多余的     
        value = value.replace(".", "$#$").replace(/\./g, "").replace("$#$", ".");
        value = value.replace(/^(\-)*(\d+)\.(\d\d).*$/, '$1$2.$3');//只能输入两个小数     
        if (value.indexOf(".") < 0 && value != "") {//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额
            if (value.substr(0, 1) == '0' && value.length == 2) {
                value = value.substr(1, value.length);
            }
        }
        return value;
    }
